---
name: "CI"

on:
  workflow_call:
  push:
    branches:
      - develop
      - master
      - rc
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  checks: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  lint:
    if: ${{ !(github.event_name == 'pull_request' && contains('master rc', github.head_ref)) }}
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Debug action
        uses: hmarr/debug-action@v2.0.1
      - name: Debug echo
        env:
          JOB_CONTENT: "${{ toJson(job) }}"
          STEPS_CONTENT: "${{ toJson(steps) }}"
          GITHUB_CONTENT: "${{ toJson(github) }}"
        run: "echo 'Debug echo'"

      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint Commit Messages
        uses: wagoid/commitlint-github-action@v4.1.11
        with:
          configFile: .github/commitlint.config.js
          helpURL: https://www.conventionalcommits.org

  test:
    needs: [ lint ]
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: init jvm
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Run tests
        run: ./mvnw clean package

#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3.0.0
#        with:
#          files: target/site/jacoco/jacoco.xml
#          env_vars: RUNNER_OS,JAVA_HOME
#          verbose: true
#          fail_ci_if_error: true
#
#      - name: Publish Unit Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        if: always()
#        with:
#          files: "target/surefire-reports/TEST-*.xml"

  release:
    needs: [ test ]
    name: Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.release.outputs.new_release_published }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: init jvm
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: init npm
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            patches/**


      - name: Install dependencies
        run: npm ci

      - id: release
        name: Release
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Do something when a new release published
        run: |
          echo ${{ steps.release.outputs.new_release_published }}
          echo ${{ steps.release.outputs.new_release_version }}
          echo ${{ steps.release.outputs.branch_type }}
          echo ${{ steps.release.outputs.branch_name }}
